//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CustomerPoint.WebReference1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class BasicHttpBinding_IService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback updatestatuspengirimanOperationCompleted;
        
        private System.Threading.SendOrPostCallback createotpOperationCompleted;
        
        private System.Threading.SendOrPostCallback lupapinOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelredeemOperationCompleted;
        
        private System.Threading.SendOrPostCallback cekcustomerkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistercustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerData1OperationCompleted;
        
        private System.Threading.SendOrPostCallback cekotpOperationCompleted;
        
        private System.Threading.SendOrPostCallback redeemOperationCompleted;
        
        private System.Threading.SendOrPostCallback setuppinOperationCompleted;
        
        private System.Threading.SendOrPostCallback cekisregisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback cekpinOperationCompleted;
        
        private System.Threading.SendOrPostCallback getpoinheaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getpromonewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getnewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ubahpinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryPoinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountInboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetInboxReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRedeemitemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRedeemhisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRedeemhisdetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setotpexpiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback getdisclaimerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ceknohpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpBinding_IService1() {
            this.Url = "http://customerpointwsbackup.azurewebsites.net/Service1.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event updatestatuspengirimanCompletedEventHandler updatestatuspengirimanCompleted;
        
        /// <remarks/>
        public event createotpCompletedEventHandler createotpCompleted;
        
        /// <remarks/>
        public event lupapinCompletedEventHandler lupapinCompleted;
        
        /// <remarks/>
        public event cancelredeemCompletedEventHandler cancelredeemCompleted;
        
        /// <remarks/>
        public event cekcustomerkeyCompletedEventHandler cekcustomerkeyCompleted;
        
        /// <remarks/>
        public event RegistercustomerCompletedEventHandler RegistercustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerData1CompletedEventHandler GetCustomerData1Completed;
        
        /// <remarks/>
        public event cekotpCompletedEventHandler cekotpCompleted;
        
        /// <remarks/>
        public event redeemCompletedEventHandler redeemCompleted;
        
        /// <remarks/>
        public event setuppinCompletedEventHandler setuppinCompleted;
        
        /// <remarks/>
        public event cekisregisterCompletedEventHandler cekisregisterCompleted;
        
        /// <remarks/>
        public event cekpinCompletedEventHandler cekpinCompleted;
        
        /// <remarks/>
        public event getpoinheaderCompletedEventHandler getpoinheaderCompleted;
        
        /// <remarks/>
        public event getpromonewCompletedEventHandler getpromonewCompleted;
        
        /// <remarks/>
        public event getnewsCompletedEventHandler getnewsCompleted;
        
        /// <remarks/>
        public event ubahpinCompletedEventHandler ubahpinCompleted;
        
        /// <remarks/>
        public event GetHistoryPoinCompletedEventHandler GetHistoryPoinCompleted;
        
        /// <remarks/>
        public event GetKatalogCompletedEventHandler GetKatalogCompleted;
        
        /// <remarks/>
        public event GetUpdateDataCompletedEventHandler GetUpdateDataCompleted;
        
        /// <remarks/>
        public event GetInboxCompletedEventHandler GetInboxCompleted;
        
        /// <remarks/>
        public event GetCountInboxCompletedEventHandler GetCountInboxCompleted;
        
        /// <remarks/>
        public event SetInboxReadCompletedEventHandler SetInboxReadCompleted;
        
        /// <remarks/>
        public event GetRedeemitemCompletedEventHandler GetRedeemitemCompleted;
        
        /// <remarks/>
        public event GetRedeemhisCompletedEventHandler GetRedeemhisCompleted;
        
        /// <remarks/>
        public event GetRedeemhisdetailCompletedEventHandler GetRedeemhisdetailCompleted;
        
        /// <remarks/>
        public event setotpexpiredCompletedEventHandler setotpexpiredCompleted;
        
        /// <remarks/>
        public event getdisclaimerCompletedEventHandler getdisclaimerCompleted;
        
        /// <remarks/>
        public event ceknohpCompletedEventHandler ceknohpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updatestatuspengiriman", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updatestatuspengiriman([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string redeemnumber) {
            this.Invoke("updatestatuspengiriman", new object[] {
                        redeemnumber});
        }
        
        /// <remarks/>
        public void updatestatuspengirimanAsync(string redeemnumber) {
            this.updatestatuspengirimanAsync(redeemnumber, null);
        }
        
        /// <remarks/>
        public void updatestatuspengirimanAsync(string redeemnumber, object userState) {
            if ((this.updatestatuspengirimanOperationCompleted == null)) {
                this.updatestatuspengirimanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatestatuspengirimanOperationCompleted);
            }
            this.InvokeAsync("updatestatuspengiriman", new object[] {
                        redeemnumber}, this.updatestatuspengirimanOperationCompleted, userState);
        }
        
        private void OnupdatestatuspengirimanOperationCompleted(object arg) {
            if ((this.updatestatuspengirimanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatestatuspengirimanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/createotp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createotp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp) {
            this.Invoke("createotp", new object[] {
                        nohp});
        }
        
        /// <remarks/>
        public void createotpAsync(string nohp) {
            this.createotpAsync(nohp, null);
        }
        
        /// <remarks/>
        public void createotpAsync(string nohp, object userState) {
            if ((this.createotpOperationCompleted == null)) {
                this.createotpOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateotpOperationCompleted);
            }
            this.InvokeAsync("createotp", new object[] {
                        nohp}, this.createotpOperationCompleted, userState);
        }
        
        private void OncreateotpOperationCompleted(object arg) {
            if ((this.createotpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createotpCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/lupapin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void lupapin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string otp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pinbaru) {
            this.Invoke("lupapin", new object[] {
                        nohp,
                        otp,
                        pinbaru});
        }
        
        /// <remarks/>
        public void lupapinAsync(string nohp, string otp, string pinbaru) {
            this.lupapinAsync(nohp, otp, pinbaru, null);
        }
        
        /// <remarks/>
        public void lupapinAsync(string nohp, string otp, string pinbaru, object userState) {
            if ((this.lupapinOperationCompleted == null)) {
                this.lupapinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlupapinOperationCompleted);
            }
            this.InvokeAsync("lupapin", new object[] {
                        nohp,
                        otp,
                        pinbaru}, this.lupapinOperationCompleted, userState);
        }
        
        private void OnlupapinOperationCompleted(object arg) {
            if ((this.lupapinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lupapinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cancelredeem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cancelredeem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string redeemnumber) {
            this.Invoke("cancelredeem", new object[] {
                        redeemnumber});
        }
        
        /// <remarks/>
        public void cancelredeemAsync(string redeemnumber) {
            this.cancelredeemAsync(redeemnumber, null);
        }
        
        /// <remarks/>
        public void cancelredeemAsync(string redeemnumber, object userState) {
            if ((this.cancelredeemOperationCompleted == null)) {
                this.cancelredeemOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelredeemOperationCompleted);
            }
            this.InvokeAsync("cancelredeem", new object[] {
                        redeemnumber}, this.cancelredeemOperationCompleted, userState);
        }
        
        private void OncancelredeemOperationCompleted(object arg) {
            if ((this.cancelredeemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelredeemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekcustomerkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekcustomerkey cekcustomerkey([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("cekcustomerkey", new object[] {
                        key});
            return ((cekcustomerkey)(results[0]));
        }
        
        /// <remarks/>
        public void cekcustomerkeyAsync(string key) {
            this.cekcustomerkeyAsync(key, null);
        }
        
        /// <remarks/>
        public void cekcustomerkeyAsync(string key, object userState) {
            if ((this.cekcustomerkeyOperationCompleted == null)) {
                this.cekcustomerkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncekcustomerkeyOperationCompleted);
            }
            this.InvokeAsync("cekcustomerkey", new object[] {
                        key}, this.cekcustomerkeyOperationCompleted, userState);
        }
        
        private void OncekcustomerkeyOperationCompleted(object arg) {
            if ((this.cekcustomerkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekcustomerkeyCompleted(this, new cekcustomerkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/Registercustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Registercustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nama, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string noktp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string kodepos, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string alamat, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string npwp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string notelptoko, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string customerkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string flag, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string jenisusaha) {
            this.Invoke("Registercustomer", new object[] {
                        nama,
                        nohp,
                        noktp,
                        kodepos,
                        alamat,
                        npwp,
                        notelptoko,
                        customerkey,
                        flag,
                        jenisusaha});
        }
        
        /// <remarks/>
        public void RegistercustomerAsync(string nama, string nohp, string noktp, string kodepos, string alamat, string npwp, string notelptoko, string customerkey, string flag, string jenisusaha) {
            this.RegistercustomerAsync(nama, nohp, noktp, kodepos, alamat, npwp, notelptoko, customerkey, flag, jenisusaha, null);
        }
        
        /// <remarks/>
        public void RegistercustomerAsync(string nama, string nohp, string noktp, string kodepos, string alamat, string npwp, string notelptoko, string customerkey, string flag, string jenisusaha, object userState) {
            if ((this.RegistercustomerOperationCompleted == null)) {
                this.RegistercustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistercustomerOperationCompleted);
            }
            this.InvokeAsync("Registercustomer", new object[] {
                        nama,
                        nohp,
                        noktp,
                        kodepos,
                        alamat,
                        npwp,
                        notelptoko,
                        customerkey,
                        flag,
                        jenisusaha}, this.RegistercustomerOperationCompleted, userState);
        }
        
        private void OnRegistercustomerOperationCompleted(object arg) {
            if ((this.RegistercustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistercustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetCustomerData1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCustomerData GetCustomerData1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetCustomerData1", new object[] {
                        MasterKey});
            return ((GetCustomerData)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerData1Async(string MasterKey) {
            this.GetCustomerData1Async(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetCustomerData1Async(string MasterKey, object userState) {
            if ((this.GetCustomerData1OperationCompleted == null)) {
                this.GetCustomerData1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerData1OperationCompleted);
            }
            this.InvokeAsync("GetCustomerData1", new object[] {
                        MasterKey}, this.GetCustomerData1OperationCompleted, userState);
        }
        
        private void OnGetCustomerData1OperationCompleted(object arg) {
            if ((this.GetCustomerData1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerData1Completed(this, new GetCustomerData1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekotp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekotp cekotp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string otp) {
            object[] results = this.Invoke("cekotp", new object[] {
                        MasterKey,
                        otp});
            return ((cekotp)(results[0]));
        }
        
        /// <remarks/>
        public void cekotpAsync(string MasterKey, string otp) {
            this.cekotpAsync(MasterKey, otp, null);
        }
        
        /// <remarks/>
        public void cekotpAsync(string MasterKey, string otp, object userState) {
            if ((this.cekotpOperationCompleted == null)) {
                this.cekotpOperationCompleted = new System.Threading.SendOrPostCallback(this.OncekotpOperationCompleted);
            }
            this.InvokeAsync("cekotp", new object[] {
                        MasterKey,
                        otp}, this.cekotpOperationCompleted, userState);
        }
        
        private void OncekotpOperationCompleted(object arg) {
            if ((this.cekotpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekotpCompleted(this, new cekotpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/redeem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void redeem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string LineNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RedeemItemCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RedeemQTY) {
            this.Invoke("redeem", new object[] {
                        requestID,
                        LineNumber,
                        MasterKey,
                        RedeemItemCode,
                        RedeemQTY});
        }
        
        /// <remarks/>
        public void redeemAsync(string requestID, string LineNumber, string MasterKey, string RedeemItemCode, string RedeemQTY) {
            this.redeemAsync(requestID, LineNumber, MasterKey, RedeemItemCode, RedeemQTY, null);
        }
        
        /// <remarks/>
        public void redeemAsync(string requestID, string LineNumber, string MasterKey, string RedeemItemCode, string RedeemQTY, object userState) {
            if ((this.redeemOperationCompleted == null)) {
                this.redeemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnredeemOperationCompleted);
            }
            this.InvokeAsync("redeem", new object[] {
                        requestID,
                        LineNumber,
                        MasterKey,
                        RedeemItemCode,
                        RedeemQTY}, this.redeemOperationCompleted, userState);
        }
        
        private void OnredeemOperationCompleted(object arg) {
            if ((this.redeemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.redeemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/setuppin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setuppin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Masterkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pin) {
            this.Invoke("setuppin", new object[] {
                        Masterkey,
                        pin});
        }
        
        /// <remarks/>
        public void setuppinAsync(string Masterkey, string pin) {
            this.setuppinAsync(Masterkey, pin, null);
        }
        
        /// <remarks/>
        public void setuppinAsync(string Masterkey, string pin, object userState) {
            if ((this.setuppinOperationCompleted == null)) {
                this.setuppinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetuppinOperationCompleted);
            }
            this.InvokeAsync("setuppin", new object[] {
                        Masterkey,
                        pin}, this.setuppinOperationCompleted, userState);
        }
        
        private void OnsetuppinOperationCompleted(object arg) {
            if ((this.setuppinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setuppinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekisregister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekisreg cekisregister([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("cekisregister", new object[] {
                        MasterKey});
            return ((cekisreg)(results[0]));
        }
        
        /// <remarks/>
        public void cekisregisterAsync(string MasterKey) {
            this.cekisregisterAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void cekisregisterAsync(string MasterKey, object userState) {
            if ((this.cekisregisterOperationCompleted == null)) {
                this.cekisregisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OncekisregisterOperationCompleted);
            }
            this.InvokeAsync("cekisregister", new object[] {
                        MasterKey}, this.cekisregisterOperationCompleted, userState);
        }
        
        private void OncekisregisterOperationCompleted(object arg) {
            if ((this.cekisregisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekisregisterCompleted(this, new cekisregisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekpin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekpin cekpin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pin) {
            object[] results = this.Invoke("cekpin", new object[] {
                        MasterKey,
                        pin});
            return ((cekpin)(results[0]));
        }
        
        /// <remarks/>
        public void cekpinAsync(string MasterKey, string pin) {
            this.cekpinAsync(MasterKey, pin, null);
        }
        
        /// <remarks/>
        public void cekpinAsync(string MasterKey, string pin, object userState) {
            if ((this.cekpinOperationCompleted == null)) {
                this.cekpinOperationCompleted = new System.Threading.SendOrPostCallback(this.OncekpinOperationCompleted);
            }
            this.InvokeAsync("cekpin", new object[] {
                        MasterKey,
                        pin}, this.cekpinOperationCompleted, userState);
        }
        
        private void OncekpinOperationCompleted(object arg) {
            if ((this.cekpinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekpinCompleted(this, new cekpinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getpoinheader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public getpoinheader getpoinheader([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("getpoinheader", new object[] {
                        MasterKey});
            return ((getpoinheader)(results[0]));
        }
        
        /// <remarks/>
        public void getpoinheaderAsync(string MasterKey) {
            this.getpoinheaderAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void getpoinheaderAsync(string MasterKey, object userState) {
            if ((this.getpoinheaderOperationCompleted == null)) {
                this.getpoinheaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetpoinheaderOperationCompleted);
            }
            this.InvokeAsync("getpoinheader", new object[] {
                        MasterKey}, this.getpoinheaderOperationCompleted, userState);
        }
        
        private void OngetpoinheaderOperationCompleted(object arg) {
            if ((this.getpoinheaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getpoinheaderCompleted(this, new getpoinheaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getpromonew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Promo getpromonew() {
            object[] results = this.Invoke("getpromonew", new object[0]);
            return ((Promo)(results[0]));
        }
        
        /// <remarks/>
        public void getpromonewAsync() {
            this.getpromonewAsync(null);
        }
        
        /// <remarks/>
        public void getpromonewAsync(object userState) {
            if ((this.getpromonewOperationCompleted == null)) {
                this.getpromonewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetpromonewOperationCompleted);
            }
            this.InvokeAsync("getpromonew", new object[0], this.getpromonewOperationCompleted, userState);
        }
        
        private void OngetpromonewOperationCompleted(object arg) {
            if ((this.getpromonewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getpromonewCompleted(this, new getpromonewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getnews", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public news getnews() {
            object[] results = this.Invoke("getnews", new object[0]);
            return ((news)(results[0]));
        }
        
        /// <remarks/>
        public void getnewsAsync() {
            this.getnewsAsync(null);
        }
        
        /// <remarks/>
        public void getnewsAsync(object userState) {
            if ((this.getnewsOperationCompleted == null)) {
                this.getnewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetnewsOperationCompleted);
            }
            this.InvokeAsync("getnews", new object[0], this.getnewsOperationCompleted, userState);
        }
        
        private void OngetnewsOperationCompleted(object arg) {
            if ((this.getnewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getnewsCompleted(this, new getnewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ubahpin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ubahpin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string oldpin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string newpin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string masterkey) {
            this.Invoke("ubahpin", new object[] {
                        oldpin,
                        newpin,
                        masterkey});
        }
        
        /// <remarks/>
        public void ubahpinAsync(string oldpin, string newpin, string masterkey) {
            this.ubahpinAsync(oldpin, newpin, masterkey, null);
        }
        
        /// <remarks/>
        public void ubahpinAsync(string oldpin, string newpin, string masterkey, object userState) {
            if ((this.ubahpinOperationCompleted == null)) {
                this.ubahpinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnubahpinOperationCompleted);
            }
            this.InvokeAsync("ubahpin", new object[] {
                        oldpin,
                        newpin,
                        masterkey}, this.ubahpinOperationCompleted, userState);
        }
        
        private void OnubahpinOperationCompleted(object arg) {
            if ((this.ubahpinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ubahpinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetHistoryPoin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public HistoryPoin GetHistoryPoin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetHistoryPoin", new object[] {
                        MasterKey});
            return ((HistoryPoin)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryPoinAsync(string MasterKey) {
            this.GetHistoryPoinAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetHistoryPoinAsync(string MasterKey, object userState) {
            if ((this.GetHistoryPoinOperationCompleted == null)) {
                this.GetHistoryPoinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryPoinOperationCompleted);
            }
            this.InvokeAsync("GetHistoryPoin", new object[] {
                        MasterKey}, this.GetHistoryPoinOperationCompleted, userState);
        }
        
        private void OnGetHistoryPoinOperationCompleted(object arg) {
            if ((this.GetHistoryPoinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryPoinCompleted(this, new GetHistoryPoinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetKatalog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Katalog GetKatalog() {
            object[] results = this.Invoke("GetKatalog", new object[0]);
            return ((Katalog)(results[0]));
        }
        
        /// <remarks/>
        public void GetKatalogAsync() {
            this.GetKatalogAsync(null);
        }
        
        /// <remarks/>
        public void GetKatalogAsync(object userState) {
            if ((this.GetKatalogOperationCompleted == null)) {
                this.GetKatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKatalogOperationCompleted);
            }
            this.InvokeAsync("GetKatalog", new object[0], this.GetKatalogOperationCompleted, userState);
        }
        
        private void OnGetKatalogOperationCompleted(object arg) {
            if ((this.GetKatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKatalogCompleted(this, new GetKatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetUpdateData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateData GetUpdateData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addtime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tablename) {
            object[] results = this.Invoke("GetUpdateData", new object[] {
                        addtime,
                        tablename});
            return ((UpdateData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateDataAsync(string addtime, string tablename) {
            this.GetUpdateDataAsync(addtime, tablename, null);
        }
        
        /// <remarks/>
        public void GetUpdateDataAsync(string addtime, string tablename, object userState) {
            if ((this.GetUpdateDataOperationCompleted == null)) {
                this.GetUpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateDataOperationCompleted);
            }
            this.InvokeAsync("GetUpdateData", new object[] {
                        addtime,
                        tablename}, this.GetUpdateDataOperationCompleted, userState);
        }
        
        private void OnGetUpdateDataOperationCompleted(object arg) {
            if ((this.GetUpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateDataCompleted(this, new GetUpdateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetInbox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Inbox GetInbox([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetInbox", new object[] {
                        MasterKey});
            return ((Inbox)(results[0]));
        }
        
        /// <remarks/>
        public void GetInboxAsync(string MasterKey) {
            this.GetInboxAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetInboxAsync(string MasterKey, object userState) {
            if ((this.GetInboxOperationCompleted == null)) {
                this.GetInboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInboxOperationCompleted);
            }
            this.InvokeAsync("GetInbox", new object[] {
                        MasterKey}, this.GetInboxOperationCompleted, userState);
        }
        
        private void OnGetInboxOperationCompleted(object arg) {
            if ((this.GetInboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInboxCompleted(this, new GetInboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetCountInbox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CountInbox GetCountInbox([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetCountInbox", new object[] {
                        MasterKey});
            return ((CountInbox)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountInboxAsync(string MasterKey) {
            this.GetCountInboxAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetCountInboxAsync(string MasterKey, object userState) {
            if ((this.GetCountInboxOperationCompleted == null)) {
                this.GetCountInboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountInboxOperationCompleted);
            }
            this.InvokeAsync("GetCountInbox", new object[] {
                        MasterKey}, this.GetCountInboxOperationCompleted, userState);
        }
        
        private void OnGetCountInboxOperationCompleted(object arg) {
            if ((this.GetCountInboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountInboxCompleted(this, new GetCountInboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SetInboxRead", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SetInbox SetInboxRead([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string InboxID) {
            object[] results = this.Invoke("SetInboxRead", new object[] {
                        InboxID});
            return ((SetInbox)(results[0]));
        }
        
        /// <remarks/>
        public void SetInboxReadAsync(string InboxID) {
            this.SetInboxReadAsync(InboxID, null);
        }
        
        /// <remarks/>
        public void SetInboxReadAsync(string InboxID, object userState) {
            if ((this.SetInboxReadOperationCompleted == null)) {
                this.SetInboxReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetInboxReadOperationCompleted);
            }
            this.InvokeAsync("SetInboxRead", new object[] {
                        InboxID}, this.SetInboxReadOperationCompleted, userState);
        }
        
        private void OnSetInboxReadOperationCompleted(object arg) {
            if ((this.SetInboxReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetInboxReadCompleted(this, new SetInboxReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetRedeemitem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public redeemitem GetRedeemitem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dimensi) {
            object[] results = this.Invoke("GetRedeemitem", new object[] {
                        dimensi});
            return ((redeemitem)(results[0]));
        }
        
        /// <remarks/>
        public void GetRedeemitemAsync(string dimensi) {
            this.GetRedeemitemAsync(dimensi, null);
        }
        
        /// <remarks/>
        public void GetRedeemitemAsync(string dimensi, object userState) {
            if ((this.GetRedeemitemOperationCompleted == null)) {
                this.GetRedeemitemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRedeemitemOperationCompleted);
            }
            this.InvokeAsync("GetRedeemitem", new object[] {
                        dimensi}, this.GetRedeemitemOperationCompleted, userState);
        }
        
        private void OnGetRedeemitemOperationCompleted(object arg) {
            if ((this.GetRedeemitemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRedeemitemCompleted(this, new GetRedeemitemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetRedeemhis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public redeemhis GetRedeemhis([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetRedeemhis", new object[] {
                        MasterKey});
            return ((redeemhis)(results[0]));
        }
        
        /// <remarks/>
        public void GetRedeemhisAsync(string MasterKey) {
            this.GetRedeemhisAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetRedeemhisAsync(string MasterKey, object userState) {
            if ((this.GetRedeemhisOperationCompleted == null)) {
                this.GetRedeemhisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRedeemhisOperationCompleted);
            }
            this.InvokeAsync("GetRedeemhis", new object[] {
                        MasterKey}, this.GetRedeemhisOperationCompleted, userState);
        }
        
        private void OnGetRedeemhisOperationCompleted(object arg) {
            if ((this.GetRedeemhisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRedeemhisCompleted(this, new GetRedeemhisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetRedeemhisdetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public redeemhisdetail GetRedeemhisdetail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string redeemnumber) {
            object[] results = this.Invoke("GetRedeemhisdetail", new object[] {
                        MasterKey,
                        redeemnumber});
            return ((redeemhisdetail)(results[0]));
        }
        
        /// <remarks/>
        public void GetRedeemhisdetailAsync(string MasterKey, string redeemnumber) {
            this.GetRedeemhisdetailAsync(MasterKey, redeemnumber, null);
        }
        
        /// <remarks/>
        public void GetRedeemhisdetailAsync(string MasterKey, string redeemnumber, object userState) {
            if ((this.GetRedeemhisdetailOperationCompleted == null)) {
                this.GetRedeemhisdetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRedeemhisdetailOperationCompleted);
            }
            this.InvokeAsync("GetRedeemhisdetail", new object[] {
                        MasterKey,
                        redeemnumber}, this.GetRedeemhisdetailOperationCompleted, userState);
        }
        
        private void OnGetRedeemhisdetailOperationCompleted(object arg) {
            if ((this.GetRedeemhisdetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRedeemhisdetailCompleted(this, new GetRedeemhisdetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/setotpexpired", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setotpexpired([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp) {
            this.Invoke("setotpexpired", new object[] {
                        nohp});
        }
        
        /// <remarks/>
        public void setotpexpiredAsync(string nohp) {
            this.setotpexpiredAsync(nohp, null);
        }
        
        /// <remarks/>
        public void setotpexpiredAsync(string nohp, object userState) {
            if ((this.setotpexpiredOperationCompleted == null)) {
                this.setotpexpiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetotpexpiredOperationCompleted);
            }
            this.InvokeAsync("setotpexpired", new object[] {
                        nohp}, this.setotpexpiredOperationCompleted, userState);
        }
        
        private void OnsetotpexpiredOperationCompleted(object arg) {
            if ((this.setotpexpiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setotpexpiredCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getdisclaimer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public disclaimer1 getdisclaimer() {
            object[] results = this.Invoke("getdisclaimer", new object[0]);
            return ((disclaimer1)(results[0]));
        }
        
        /// <remarks/>
        public void getdisclaimerAsync() {
            this.getdisclaimerAsync(null);
        }
        
        /// <remarks/>
        public void getdisclaimerAsync(object userState) {
            if ((this.getdisclaimerOperationCompleted == null)) {
                this.getdisclaimerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetdisclaimerOperationCompleted);
            }
            this.InvokeAsync("getdisclaimer", new object[0], this.getdisclaimerOperationCompleted, userState);
        }
        
        private void OngetdisclaimerOperationCompleted(object arg) {
            if ((this.getdisclaimerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getdisclaimerCompleted(this, new getdisclaimerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ceknohp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ceknohp ceknohp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp) {
            object[] results = this.Invoke("ceknohp", new object[] {
                        nohp});
            return ((ceknohp)(results[0]));
        }
        
        /// <remarks/>
        public void ceknohpAsync(string nohp) {
            this.ceknohpAsync(nohp, null);
        }
        
        /// <remarks/>
        public void ceknohpAsync(string nohp, object userState) {
            if ((this.ceknohpOperationCompleted == null)) {
                this.ceknohpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnceknohpOperationCompleted);
            }
            this.InvokeAsync("ceknohp", new object[] {
                        nohp}, this.ceknohpOperationCompleted, userState);
        }
        
        private void OnceknohpOperationCompleted(object arg) {
            if ((this.ceknohpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ceknohpCompleted(this, new ceknohpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpsBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class BasicHttpsBinding_IService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback updatestatuspengirimanOperationCompleted;
        
        private System.Threading.SendOrPostCallback createotpOperationCompleted;
        
        private System.Threading.SendOrPostCallback lupapinOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelredeemOperationCompleted;
        
        private System.Threading.SendOrPostCallback cekcustomerkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegistercustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerData1OperationCompleted;
        
        private System.Threading.SendOrPostCallback cekotpOperationCompleted;
        
        private System.Threading.SendOrPostCallback redeemOperationCompleted;
        
        private System.Threading.SendOrPostCallback setuppinOperationCompleted;
        
        private System.Threading.SendOrPostCallback cekisregisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback cekpinOperationCompleted;
        
        private System.Threading.SendOrPostCallback getpoinheaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback getpromonewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getnewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ubahpinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryPoinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountInboxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetInboxReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRedeemitemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRedeemhisOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRedeemhisdetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback setotpexpiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback getdisclaimerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ceknohpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpsBinding_IService1() {
            this.Url = "https://customerpointwsbackup.azurewebsites.net/Service1.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event updatestatuspengirimanCompletedEventHandler updatestatuspengirimanCompleted;
        
        /// <remarks/>
        public event createotpCompletedEventHandler createotpCompleted;
        
        /// <remarks/>
        public event lupapinCompletedEventHandler lupapinCompleted;
        
        /// <remarks/>
        public event cancelredeemCompletedEventHandler cancelredeemCompleted;
        
        /// <remarks/>
        public event cekcustomerkeyCompletedEventHandler cekcustomerkeyCompleted;
        
        /// <remarks/>
        public event RegistercustomerCompletedEventHandler RegistercustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerData1CompletedEventHandler GetCustomerData1Completed;
        
        /// <remarks/>
        public event cekotpCompletedEventHandler cekotpCompleted;
        
        /// <remarks/>
        public event redeemCompletedEventHandler redeemCompleted;
        
        /// <remarks/>
        public event setuppinCompletedEventHandler setuppinCompleted;
        
        /// <remarks/>
        public event cekisregisterCompletedEventHandler cekisregisterCompleted;
        
        /// <remarks/>
        public event cekpinCompletedEventHandler cekpinCompleted;
        
        /// <remarks/>
        public event getpoinheaderCompletedEventHandler getpoinheaderCompleted;
        
        /// <remarks/>
        public event getpromonewCompletedEventHandler getpromonewCompleted;
        
        /// <remarks/>
        public event getnewsCompletedEventHandler getnewsCompleted;
        
        /// <remarks/>
        public event ubahpinCompletedEventHandler ubahpinCompleted;
        
        /// <remarks/>
        public event GetHistoryPoinCompletedEventHandler GetHistoryPoinCompleted;
        
        /// <remarks/>
        public event GetKatalogCompletedEventHandler GetKatalogCompleted;
        
        /// <remarks/>
        public event GetUpdateDataCompletedEventHandler GetUpdateDataCompleted;
        
        /// <remarks/>
        public event GetInboxCompletedEventHandler GetInboxCompleted;
        
        /// <remarks/>
        public event GetCountInboxCompletedEventHandler GetCountInboxCompleted;
        
        /// <remarks/>
        public event SetInboxReadCompletedEventHandler SetInboxReadCompleted;
        
        /// <remarks/>
        public event GetRedeemitemCompletedEventHandler GetRedeemitemCompleted;
        
        /// <remarks/>
        public event GetRedeemhisCompletedEventHandler GetRedeemhisCompleted;
        
        /// <remarks/>
        public event GetRedeemhisdetailCompletedEventHandler GetRedeemhisdetailCompleted;
        
        /// <remarks/>
        public event setotpexpiredCompletedEventHandler setotpexpiredCompleted;
        
        /// <remarks/>
        public event getdisclaimerCompletedEventHandler getdisclaimerCompleted;
        
        /// <remarks/>
        public event ceknohpCompletedEventHandler ceknohpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updatestatuspengiriman", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updatestatuspengiriman([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string redeemnumber) {
            this.Invoke("updatestatuspengiriman", new object[] {
                        redeemnumber});
        }
        
        /// <remarks/>
        public void updatestatuspengirimanAsync(string redeemnumber) {
            this.updatestatuspengirimanAsync(redeemnumber, null);
        }
        
        /// <remarks/>
        public void updatestatuspengirimanAsync(string redeemnumber, object userState) {
            if ((this.updatestatuspengirimanOperationCompleted == null)) {
                this.updatestatuspengirimanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatestatuspengirimanOperationCompleted);
            }
            this.InvokeAsync("updatestatuspengiriman", new object[] {
                        redeemnumber}, this.updatestatuspengirimanOperationCompleted, userState);
        }
        
        private void OnupdatestatuspengirimanOperationCompleted(object arg) {
            if ((this.updatestatuspengirimanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatestatuspengirimanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/createotp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createotp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp) {
            this.Invoke("createotp", new object[] {
                        nohp});
        }
        
        /// <remarks/>
        public void createotpAsync(string nohp) {
            this.createotpAsync(nohp, null);
        }
        
        /// <remarks/>
        public void createotpAsync(string nohp, object userState) {
            if ((this.createotpOperationCompleted == null)) {
                this.createotpOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateotpOperationCompleted);
            }
            this.InvokeAsync("createotp", new object[] {
                        nohp}, this.createotpOperationCompleted, userState);
        }
        
        private void OncreateotpOperationCompleted(object arg) {
            if ((this.createotpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createotpCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/lupapin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void lupapin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string otp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pinbaru) {
            this.Invoke("lupapin", new object[] {
                        nohp,
                        otp,
                        pinbaru});
        }
        
        /// <remarks/>
        public void lupapinAsync(string nohp, string otp, string pinbaru) {
            this.lupapinAsync(nohp, otp, pinbaru, null);
        }
        
        /// <remarks/>
        public void lupapinAsync(string nohp, string otp, string pinbaru, object userState) {
            if ((this.lupapinOperationCompleted == null)) {
                this.lupapinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlupapinOperationCompleted);
            }
            this.InvokeAsync("lupapin", new object[] {
                        nohp,
                        otp,
                        pinbaru}, this.lupapinOperationCompleted, userState);
        }
        
        private void OnlupapinOperationCompleted(object arg) {
            if ((this.lupapinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.lupapinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cancelredeem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cancelredeem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string redeemnumber) {
            this.Invoke("cancelredeem", new object[] {
                        redeemnumber});
        }
        
        /// <remarks/>
        public void cancelredeemAsync(string redeemnumber) {
            this.cancelredeemAsync(redeemnumber, null);
        }
        
        /// <remarks/>
        public void cancelredeemAsync(string redeemnumber, object userState) {
            if ((this.cancelredeemOperationCompleted == null)) {
                this.cancelredeemOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelredeemOperationCompleted);
            }
            this.InvokeAsync("cancelredeem", new object[] {
                        redeemnumber}, this.cancelredeemOperationCompleted, userState);
        }
        
        private void OncancelredeemOperationCompleted(object arg) {
            if ((this.cancelredeemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelredeemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekcustomerkey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekcustomerkey cekcustomerkey([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string key) {
            object[] results = this.Invoke("cekcustomerkey", new object[] {
                        key});
            return ((cekcustomerkey)(results[0]));
        }
        
        /// <remarks/>
        public void cekcustomerkeyAsync(string key) {
            this.cekcustomerkeyAsync(key, null);
        }
        
        /// <remarks/>
        public void cekcustomerkeyAsync(string key, object userState) {
            if ((this.cekcustomerkeyOperationCompleted == null)) {
                this.cekcustomerkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncekcustomerkeyOperationCompleted);
            }
            this.InvokeAsync("cekcustomerkey", new object[] {
                        key}, this.cekcustomerkeyOperationCompleted, userState);
        }
        
        private void OncekcustomerkeyOperationCompleted(object arg) {
            if ((this.cekcustomerkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekcustomerkeyCompleted(this, new cekcustomerkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/Registercustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Registercustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nama, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string noktp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string kodepos, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string alamat, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string npwp, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string notelptoko, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string customerkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string flag, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string jenisusaha) {
            this.Invoke("Registercustomer", new object[] {
                        nama,
                        nohp,
                        noktp,
                        kodepos,
                        alamat,
                        npwp,
                        notelptoko,
                        customerkey,
                        flag,
                        jenisusaha});
        }
        
        /// <remarks/>
        public void RegistercustomerAsync(string nama, string nohp, string noktp, string kodepos, string alamat, string npwp, string notelptoko, string customerkey, string flag, string jenisusaha) {
            this.RegistercustomerAsync(nama, nohp, noktp, kodepos, alamat, npwp, notelptoko, customerkey, flag, jenisusaha, null);
        }
        
        /// <remarks/>
        public void RegistercustomerAsync(string nama, string nohp, string noktp, string kodepos, string alamat, string npwp, string notelptoko, string customerkey, string flag, string jenisusaha, object userState) {
            if ((this.RegistercustomerOperationCompleted == null)) {
                this.RegistercustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegistercustomerOperationCompleted);
            }
            this.InvokeAsync("Registercustomer", new object[] {
                        nama,
                        nohp,
                        noktp,
                        kodepos,
                        alamat,
                        npwp,
                        notelptoko,
                        customerkey,
                        flag,
                        jenisusaha}, this.RegistercustomerOperationCompleted, userState);
        }
        
        private void OnRegistercustomerOperationCompleted(object arg) {
            if ((this.RegistercustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegistercustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetCustomerData1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GetCustomerData GetCustomerData1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetCustomerData1", new object[] {
                        MasterKey});
            return ((GetCustomerData)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerData1Async(string MasterKey) {
            this.GetCustomerData1Async(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetCustomerData1Async(string MasterKey, object userState) {
            if ((this.GetCustomerData1OperationCompleted == null)) {
                this.GetCustomerData1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerData1OperationCompleted);
            }
            this.InvokeAsync("GetCustomerData1", new object[] {
                        MasterKey}, this.GetCustomerData1OperationCompleted, userState);
        }
        
        private void OnGetCustomerData1OperationCompleted(object arg) {
            if ((this.GetCustomerData1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerData1Completed(this, new GetCustomerData1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekotp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekotp cekotp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string otp) {
            object[] results = this.Invoke("cekotp", new object[] {
                        MasterKey,
                        otp});
            return ((cekotp)(results[0]));
        }
        
        /// <remarks/>
        public void cekotpAsync(string MasterKey, string otp) {
            this.cekotpAsync(MasterKey, otp, null);
        }
        
        /// <remarks/>
        public void cekotpAsync(string MasterKey, string otp, object userState) {
            if ((this.cekotpOperationCompleted == null)) {
                this.cekotpOperationCompleted = new System.Threading.SendOrPostCallback(this.OncekotpOperationCompleted);
            }
            this.InvokeAsync("cekotp", new object[] {
                        MasterKey,
                        otp}, this.cekotpOperationCompleted, userState);
        }
        
        private void OncekotpOperationCompleted(object arg) {
            if ((this.cekotpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekotpCompleted(this, new cekotpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/redeem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void redeem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string requestID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string LineNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RedeemItemCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RedeemQTY) {
            this.Invoke("redeem", new object[] {
                        requestID,
                        LineNumber,
                        MasterKey,
                        RedeemItemCode,
                        RedeemQTY});
        }
        
        /// <remarks/>
        public void redeemAsync(string requestID, string LineNumber, string MasterKey, string RedeemItemCode, string RedeemQTY) {
            this.redeemAsync(requestID, LineNumber, MasterKey, RedeemItemCode, RedeemQTY, null);
        }
        
        /// <remarks/>
        public void redeemAsync(string requestID, string LineNumber, string MasterKey, string RedeemItemCode, string RedeemQTY, object userState) {
            if ((this.redeemOperationCompleted == null)) {
                this.redeemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnredeemOperationCompleted);
            }
            this.InvokeAsync("redeem", new object[] {
                        requestID,
                        LineNumber,
                        MasterKey,
                        RedeemItemCode,
                        RedeemQTY}, this.redeemOperationCompleted, userState);
        }
        
        private void OnredeemOperationCompleted(object arg) {
            if ((this.redeemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.redeemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/setuppin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setuppin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Masterkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pin) {
            this.Invoke("setuppin", new object[] {
                        Masterkey,
                        pin});
        }
        
        /// <remarks/>
        public void setuppinAsync(string Masterkey, string pin) {
            this.setuppinAsync(Masterkey, pin, null);
        }
        
        /// <remarks/>
        public void setuppinAsync(string Masterkey, string pin, object userState) {
            if ((this.setuppinOperationCompleted == null)) {
                this.setuppinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetuppinOperationCompleted);
            }
            this.InvokeAsync("setuppin", new object[] {
                        Masterkey,
                        pin}, this.setuppinOperationCompleted, userState);
        }
        
        private void OnsetuppinOperationCompleted(object arg) {
            if ((this.setuppinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setuppinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekisregister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekisreg cekisregister([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("cekisregister", new object[] {
                        MasterKey});
            return ((cekisreg)(results[0]));
        }
        
        /// <remarks/>
        public void cekisregisterAsync(string MasterKey) {
            this.cekisregisterAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void cekisregisterAsync(string MasterKey, object userState) {
            if ((this.cekisregisterOperationCompleted == null)) {
                this.cekisregisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OncekisregisterOperationCompleted);
            }
            this.InvokeAsync("cekisregister", new object[] {
                        MasterKey}, this.cekisregisterOperationCompleted, userState);
        }
        
        private void OncekisregisterOperationCompleted(object arg) {
            if ((this.cekisregisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekisregisterCompleted(this, new cekisregisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekpin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekpin cekpin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string pin) {
            object[] results = this.Invoke("cekpin", new object[] {
                        MasterKey,
                        pin});
            return ((cekpin)(results[0]));
        }
        
        /// <remarks/>
        public void cekpinAsync(string MasterKey, string pin) {
            this.cekpinAsync(MasterKey, pin, null);
        }
        
        /// <remarks/>
        public void cekpinAsync(string MasterKey, string pin, object userState) {
            if ((this.cekpinOperationCompleted == null)) {
                this.cekpinOperationCompleted = new System.Threading.SendOrPostCallback(this.OncekpinOperationCompleted);
            }
            this.InvokeAsync("cekpin", new object[] {
                        MasterKey,
                        pin}, this.cekpinOperationCompleted, userState);
        }
        
        private void OncekpinOperationCompleted(object arg) {
            if ((this.cekpinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekpinCompleted(this, new cekpinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getpoinheader", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public getpoinheader getpoinheader([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("getpoinheader", new object[] {
                        MasterKey});
            return ((getpoinheader)(results[0]));
        }
        
        /// <remarks/>
        public void getpoinheaderAsync(string MasterKey) {
            this.getpoinheaderAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void getpoinheaderAsync(string MasterKey, object userState) {
            if ((this.getpoinheaderOperationCompleted == null)) {
                this.getpoinheaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetpoinheaderOperationCompleted);
            }
            this.InvokeAsync("getpoinheader", new object[] {
                        MasterKey}, this.getpoinheaderOperationCompleted, userState);
        }
        
        private void OngetpoinheaderOperationCompleted(object arg) {
            if ((this.getpoinheaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getpoinheaderCompleted(this, new getpoinheaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getpromonew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Promo getpromonew() {
            object[] results = this.Invoke("getpromonew", new object[0]);
            return ((Promo)(results[0]));
        }
        
        /// <remarks/>
        public void getpromonewAsync() {
            this.getpromonewAsync(null);
        }
        
        /// <remarks/>
        public void getpromonewAsync(object userState) {
            if ((this.getpromonewOperationCompleted == null)) {
                this.getpromonewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetpromonewOperationCompleted);
            }
            this.InvokeAsync("getpromonew", new object[0], this.getpromonewOperationCompleted, userState);
        }
        
        private void OngetpromonewOperationCompleted(object arg) {
            if ((this.getpromonewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getpromonewCompleted(this, new getpromonewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getnews", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public news getnews() {
            object[] results = this.Invoke("getnews", new object[0]);
            return ((news)(results[0]));
        }
        
        /// <remarks/>
        public void getnewsAsync() {
            this.getnewsAsync(null);
        }
        
        /// <remarks/>
        public void getnewsAsync(object userState) {
            if ((this.getnewsOperationCompleted == null)) {
                this.getnewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetnewsOperationCompleted);
            }
            this.InvokeAsync("getnews", new object[0], this.getnewsOperationCompleted, userState);
        }
        
        private void OngetnewsOperationCompleted(object arg) {
            if ((this.getnewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getnewsCompleted(this, new getnewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ubahpin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ubahpin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string oldpin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string newpin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string masterkey) {
            this.Invoke("ubahpin", new object[] {
                        oldpin,
                        newpin,
                        masterkey});
        }
        
        /// <remarks/>
        public void ubahpinAsync(string oldpin, string newpin, string masterkey) {
            this.ubahpinAsync(oldpin, newpin, masterkey, null);
        }
        
        /// <remarks/>
        public void ubahpinAsync(string oldpin, string newpin, string masterkey, object userState) {
            if ((this.ubahpinOperationCompleted == null)) {
                this.ubahpinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnubahpinOperationCompleted);
            }
            this.InvokeAsync("ubahpin", new object[] {
                        oldpin,
                        newpin,
                        masterkey}, this.ubahpinOperationCompleted, userState);
        }
        
        private void OnubahpinOperationCompleted(object arg) {
            if ((this.ubahpinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ubahpinCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetHistoryPoin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public HistoryPoin GetHistoryPoin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetHistoryPoin", new object[] {
                        MasterKey});
            return ((HistoryPoin)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryPoinAsync(string MasterKey) {
            this.GetHistoryPoinAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetHistoryPoinAsync(string MasterKey, object userState) {
            if ((this.GetHistoryPoinOperationCompleted == null)) {
                this.GetHistoryPoinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryPoinOperationCompleted);
            }
            this.InvokeAsync("GetHistoryPoin", new object[] {
                        MasterKey}, this.GetHistoryPoinOperationCompleted, userState);
        }
        
        private void OnGetHistoryPoinOperationCompleted(object arg) {
            if ((this.GetHistoryPoinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryPoinCompleted(this, new GetHistoryPoinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetKatalog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Katalog GetKatalog() {
            object[] results = this.Invoke("GetKatalog", new object[0]);
            return ((Katalog)(results[0]));
        }
        
        /// <remarks/>
        public void GetKatalogAsync() {
            this.GetKatalogAsync(null);
        }
        
        /// <remarks/>
        public void GetKatalogAsync(object userState) {
            if ((this.GetKatalogOperationCompleted == null)) {
                this.GetKatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKatalogOperationCompleted);
            }
            this.InvokeAsync("GetKatalog", new object[0], this.GetKatalogOperationCompleted, userState);
        }
        
        private void OnGetKatalogOperationCompleted(object arg) {
            if ((this.GetKatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKatalogCompleted(this, new GetKatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetUpdateData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public UpdateData GetUpdateData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string addtime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tablename) {
            object[] results = this.Invoke("GetUpdateData", new object[] {
                        addtime,
                        tablename});
            return ((UpdateData)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateDataAsync(string addtime, string tablename) {
            this.GetUpdateDataAsync(addtime, tablename, null);
        }
        
        /// <remarks/>
        public void GetUpdateDataAsync(string addtime, string tablename, object userState) {
            if ((this.GetUpdateDataOperationCompleted == null)) {
                this.GetUpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateDataOperationCompleted);
            }
            this.InvokeAsync("GetUpdateData", new object[] {
                        addtime,
                        tablename}, this.GetUpdateDataOperationCompleted, userState);
        }
        
        private void OnGetUpdateDataOperationCompleted(object arg) {
            if ((this.GetUpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateDataCompleted(this, new GetUpdateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetInbox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Inbox GetInbox([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetInbox", new object[] {
                        MasterKey});
            return ((Inbox)(results[0]));
        }
        
        /// <remarks/>
        public void GetInboxAsync(string MasterKey) {
            this.GetInboxAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetInboxAsync(string MasterKey, object userState) {
            if ((this.GetInboxOperationCompleted == null)) {
                this.GetInboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInboxOperationCompleted);
            }
            this.InvokeAsync("GetInbox", new object[] {
                        MasterKey}, this.GetInboxOperationCompleted, userState);
        }
        
        private void OnGetInboxOperationCompleted(object arg) {
            if ((this.GetInboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInboxCompleted(this, new GetInboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetCountInbox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CountInbox GetCountInbox([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetCountInbox", new object[] {
                        MasterKey});
            return ((CountInbox)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountInboxAsync(string MasterKey) {
            this.GetCountInboxAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetCountInboxAsync(string MasterKey, object userState) {
            if ((this.GetCountInboxOperationCompleted == null)) {
                this.GetCountInboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountInboxOperationCompleted);
            }
            this.InvokeAsync("GetCountInbox", new object[] {
                        MasterKey}, this.GetCountInboxOperationCompleted, userState);
        }
        
        private void OnGetCountInboxOperationCompleted(object arg) {
            if ((this.GetCountInboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountInboxCompleted(this, new GetCountInboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SetInboxRead", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SetInbox SetInboxRead([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string InboxID) {
            object[] results = this.Invoke("SetInboxRead", new object[] {
                        InboxID});
            return ((SetInbox)(results[0]));
        }
        
        /// <remarks/>
        public void SetInboxReadAsync(string InboxID) {
            this.SetInboxReadAsync(InboxID, null);
        }
        
        /// <remarks/>
        public void SetInboxReadAsync(string InboxID, object userState) {
            if ((this.SetInboxReadOperationCompleted == null)) {
                this.SetInboxReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetInboxReadOperationCompleted);
            }
            this.InvokeAsync("SetInboxRead", new object[] {
                        InboxID}, this.SetInboxReadOperationCompleted, userState);
        }
        
        private void OnSetInboxReadOperationCompleted(object arg) {
            if ((this.SetInboxReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetInboxReadCompleted(this, new SetInboxReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetRedeemitem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public redeemitem GetRedeemitem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dimensi) {
            object[] results = this.Invoke("GetRedeemitem", new object[] {
                        dimensi});
            return ((redeemitem)(results[0]));
        }
        
        /// <remarks/>
        public void GetRedeemitemAsync(string dimensi) {
            this.GetRedeemitemAsync(dimensi, null);
        }
        
        /// <remarks/>
        public void GetRedeemitemAsync(string dimensi, object userState) {
            if ((this.GetRedeemitemOperationCompleted == null)) {
                this.GetRedeemitemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRedeemitemOperationCompleted);
            }
            this.InvokeAsync("GetRedeemitem", new object[] {
                        dimensi}, this.GetRedeemitemOperationCompleted, userState);
        }
        
        private void OnGetRedeemitemOperationCompleted(object arg) {
            if ((this.GetRedeemitemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRedeemitemCompleted(this, new GetRedeemitemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetRedeemhis", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public redeemhis GetRedeemhis([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey) {
            object[] results = this.Invoke("GetRedeemhis", new object[] {
                        MasterKey});
            return ((redeemhis)(results[0]));
        }
        
        /// <remarks/>
        public void GetRedeemhisAsync(string MasterKey) {
            this.GetRedeemhisAsync(MasterKey, null);
        }
        
        /// <remarks/>
        public void GetRedeemhisAsync(string MasterKey, object userState) {
            if ((this.GetRedeemhisOperationCompleted == null)) {
                this.GetRedeemhisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRedeemhisOperationCompleted);
            }
            this.InvokeAsync("GetRedeemhis", new object[] {
                        MasterKey}, this.GetRedeemhisOperationCompleted, userState);
        }
        
        private void OnGetRedeemhisOperationCompleted(object arg) {
            if ((this.GetRedeemhisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRedeemhisCompleted(this, new GetRedeemhisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetRedeemhisdetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public redeemhisdetail GetRedeemhisdetail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MasterKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string redeemnumber) {
            object[] results = this.Invoke("GetRedeemhisdetail", new object[] {
                        MasterKey,
                        redeemnumber});
            return ((redeemhisdetail)(results[0]));
        }
        
        /// <remarks/>
        public void GetRedeemhisdetailAsync(string MasterKey, string redeemnumber) {
            this.GetRedeemhisdetailAsync(MasterKey, redeemnumber, null);
        }
        
        /// <remarks/>
        public void GetRedeemhisdetailAsync(string MasterKey, string redeemnumber, object userState) {
            if ((this.GetRedeemhisdetailOperationCompleted == null)) {
                this.GetRedeemhisdetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRedeemhisdetailOperationCompleted);
            }
            this.InvokeAsync("GetRedeemhisdetail", new object[] {
                        MasterKey,
                        redeemnumber}, this.GetRedeemhisdetailOperationCompleted, userState);
        }
        
        private void OnGetRedeemhisdetailOperationCompleted(object arg) {
            if ((this.GetRedeemhisdetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRedeemhisdetailCompleted(this, new GetRedeemhisdetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/setotpexpired", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setotpexpired([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp) {
            this.Invoke("setotpexpired", new object[] {
                        nohp});
        }
        
        /// <remarks/>
        public void setotpexpiredAsync(string nohp) {
            this.setotpexpiredAsync(nohp, null);
        }
        
        /// <remarks/>
        public void setotpexpiredAsync(string nohp, object userState) {
            if ((this.setotpexpiredOperationCompleted == null)) {
                this.setotpexpiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetotpexpiredOperationCompleted);
            }
            this.InvokeAsync("setotpexpired", new object[] {
                        nohp}, this.setotpexpiredOperationCompleted, userState);
        }
        
        private void OnsetotpexpiredOperationCompleted(object arg) {
            if ((this.setotpexpiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setotpexpiredCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getdisclaimer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public disclaimer1 getdisclaimer() {
            object[] results = this.Invoke("getdisclaimer", new object[0]);
            return ((disclaimer1)(results[0]));
        }
        
        /// <remarks/>
        public void getdisclaimerAsync() {
            this.getdisclaimerAsync(null);
        }
        
        /// <remarks/>
        public void getdisclaimerAsync(object userState) {
            if ((this.getdisclaimerOperationCompleted == null)) {
                this.getdisclaimerOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetdisclaimerOperationCompleted);
            }
            this.InvokeAsync("getdisclaimer", new object[0], this.getdisclaimerOperationCompleted, userState);
        }
        
        private void OngetdisclaimerOperationCompleted(object arg) {
            if ((this.getdisclaimerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getdisclaimerCompleted(this, new getdisclaimerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ceknohp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ceknohp ceknohp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nohp) {
            object[] results = this.Invoke("ceknohp", new object[] {
                        nohp});
            return ((ceknohp)(results[0]));
        }
        
        /// <remarks/>
        public void ceknohpAsync(string nohp) {
            this.ceknohpAsync(nohp, null);
        }
        
        /// <remarks/>
        public void ceknohpAsync(string nohp, object userState) {
            if ((this.ceknohpOperationCompleted == null)) {
                this.ceknohpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnceknohpOperationCompleted);
            }
            this.InvokeAsync("ceknohp", new object[] {
                        nohp}, this.ceknohpOperationCompleted, userState);
        }
        
        private void OnceknohpOperationCompleted(object arg) {
            if ((this.ceknohpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ceknohpCompleted(this, new ceknohpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class cekcustomerkey {
        
        private int cekcustomerkey1Field;
        
        private bool cekcustomerkey1FieldSpecified;
        
        /// <remarks/>
        public int cekcustomerkey1 {
            get {
                return this.cekcustomerkey1Field;
            }
            set {
                this.cekcustomerkey1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cekcustomerkey1Specified {
            get {
                return this.cekcustomerkey1FieldSpecified;
            }
            set {
                this.cekcustomerkey1FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class ceknohp {
        
        private int ceknohpavailField;
        
        private bool ceknohpavailFieldSpecified;
        
        /// <remarks/>
        public int ceknohpavail {
            get {
                return this.ceknohpavailField;
            }
            set {
                this.ceknohpavailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ceknohpavailSpecified {
            get {
                return this.ceknohpavailFieldSpecified;
            }
            set {
                this.ceknohpavailFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class disclaimer1 {
        
        private System.Data.DataTable disclaimertableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable disclaimertable {
            get {
                return this.disclaimertableField;
            }
            set {
                this.disclaimertableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class redeemhisdetail {
        
        private System.Data.DataTable redeemhisdetailtableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable redeemhisdetailtable {
            get {
                return this.redeemhisdetailtableField;
            }
            set {
                this.redeemhisdetailtableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class redeemhis {
        
        private System.Data.DataTable redeemhistableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable redeemhistable {
            get {
                return this.redeemhistableField;
            }
            set {
                this.redeemhistableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class redeemitem {
        
        private System.Data.DataTable redeemitemtableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable redeemitemtable {
            get {
                return this.redeemitemtableField;
            }
            set {
                this.redeemitemtableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class SetInbox {
        
        private System.Data.DataTable setInboxtableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable SetInboxtable {
            get {
                return this.setInboxtableField;
            }
            set {
                this.setInboxtableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class CountInbox {
        
        private System.Data.DataTable countInboxtableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable CountInboxtable {
            get {
                return this.countInboxtableField;
            }
            set {
                this.countInboxtableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class Inbox {
        
        private System.Data.DataTable inboxtableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable Inboxtable {
            get {
                return this.inboxtableField;
            }
            set {
                this.inboxtableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class UpdateData {
        
        private System.Data.DataTable updateDatatableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable UpdateDatatable {
            get {
                return this.updateDatatableField;
            }
            set {
                this.updateDatatableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class Katalog {
        
        private System.Data.DataTable katalogtableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable Katalogtable {
            get {
                return this.katalogtableField;
            }
            set {
                this.katalogtableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class HistoryPoin {
        
        private System.Data.DataTable historyPointableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable HistoryPointable {
            get {
                return this.historyPointableField;
            }
            set {
                this.historyPointableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class news {
        
        private System.Data.DataTable tablenewsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable tablenews {
            get {
                return this.tablenewsField;
            }
            set {
                this.tablenewsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class Promo {
        
        private System.Data.DataTable tablePromoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable tablePromo {
            get {
                return this.tablePromoField;
            }
            set {
                this.tablePromoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class getpoinheader {
        
        private System.Data.DataTable poinheadertableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable poinheadertable {
            get {
                return this.poinheadertableField;
            }
            set {
                this.poinheadertableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class cekpin {
        
        private string cekpin1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cekpin1 {
            get {
                return this.cekpin1Field;
            }
            set {
                this.cekpin1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class cekisreg {
        
        private int cekisregisterField;
        
        private bool cekisregisterFieldSpecified;
        
        /// <remarks/>
        public int cekisregister {
            get {
                return this.cekisregisterField;
            }
            set {
                this.cekisregisterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cekisregisterSpecified {
            get {
                return this.cekisregisterFieldSpecified;
            }
            set {
                this.cekisregisterFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class cekotp {
        
        private int cekotp1Field;
        
        private bool cekotp1FieldSpecified;
        
        /// <remarks/>
        public int cekotp1 {
            get {
                return this.cekotp1Field;
            }
            set {
                this.cekotp1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cekotp1Specified {
            get {
                return this.cekotp1FieldSpecified;
            }
            set {
                this.cekotp1FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfCustomerPoint")]
    public partial class GetCustomerData {
        
        private System.Data.DataTable getCustomerData1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable GetCustomerData1 {
            get {
                return this.getCustomerData1Field;
            }
            set {
                this.getCustomerData1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updatestatuspengirimanCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createotpCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void lupapinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cancelredeemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cekcustomerkeyCompletedEventHandler(object sender, cekcustomerkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekcustomerkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekcustomerkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cekcustomerkey Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cekcustomerkey)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RegistercustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCustomerData1CompletedEventHandler(object sender, GetCustomerData1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerData1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerData1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetCustomerData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetCustomerData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cekotpCompletedEventHandler(object sender, cekotpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekotpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekotpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cekotp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cekotp)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void redeemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setuppinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cekisregisterCompletedEventHandler(object sender, cekisregisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekisregisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekisregisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cekisreg Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cekisreg)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cekpinCompletedEventHandler(object sender, cekpinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekpinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekpinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cekpin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cekpin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getpoinheaderCompletedEventHandler(object sender, getpoinheaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getpoinheaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getpoinheaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getpoinheader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getpoinheader)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getpromonewCompletedEventHandler(object sender, getpromonewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getpromonewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getpromonewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Promo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Promo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getnewsCompletedEventHandler(object sender, getnewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getnewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getnewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public news Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((news)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ubahpinCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetHistoryPoinCompletedEventHandler(object sender, GetHistoryPoinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryPoinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryPoinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HistoryPoin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HistoryPoin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetKatalogCompletedEventHandler(object sender, GetKatalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Katalog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Katalog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUpdateDataCompletedEventHandler(object sender, GetUpdateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetInboxCompletedEventHandler(object sender, GetInboxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Inbox Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Inbox)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetCountInboxCompletedEventHandler(object sender, GetCountInboxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountInboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountInboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountInbox Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountInbox)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetInboxReadCompletedEventHandler(object sender, SetInboxReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetInboxReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetInboxReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetInbox Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetInbox)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRedeemitemCompletedEventHandler(object sender, GetRedeemitemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRedeemitemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRedeemitemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public redeemitem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((redeemitem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRedeemhisCompletedEventHandler(object sender, GetRedeemhisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRedeemhisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRedeemhisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public redeemhis Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((redeemhis)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRedeemhisdetailCompletedEventHandler(object sender, GetRedeemhisdetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRedeemhisdetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRedeemhisdetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public redeemhisdetail Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((redeemhisdetail)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setotpexpiredCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getdisclaimerCompletedEventHandler(object sender, getdisclaimerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getdisclaimerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getdisclaimerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public disclaimer1 Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((disclaimer1)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ceknohpCompletedEventHandler(object sender, ceknohpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ceknohpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ceknohpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ceknohp Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ceknohp)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591